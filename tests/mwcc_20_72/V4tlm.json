{"compiler": "mwcc_20_72", "compiler_flags": "-O4,p -enum int -proc arm946e -gccext,on -fp soft -lang c++ -inline on,noauto -Cpp_exceptions off -gccinc -interworking -gccdep -MD -g", "source_code": "template <typename T>\nstatic inline T* null() {\n    return static_cast<T*>(NULL);\n}\n\n// 0x2043a54\nbool SceneGraph::RemoveChild(SceneNode* child) {\n    if (child != null<SceneNode>()) {\n        if (child->first_child != null<SceneNode>()) {\n            return false;\n        }\n        if (child->previous != null<SceneNode>()) {\n            child->previous->next = child->next;\n        } else {\n            if (child->parent != null<SceneNode>()) {\n                child->parent->first_child = child->next;\n            } else {\n                m_root = null<SceneNode>();\n            }\n        }\n    \n        if (child->next != null<SceneNode>()) {\n            child->next->previous = child->previous;\n        }\n    \n        child->previous = null<SceneNode>();\n        child->next = static_cast<SceneNode*>(NULL);\n        child->parent = null<SceneNode>();\n    } else {\n        return false;\n    }\n\n    return true;\n}\n", "context": "typedef unsigned char u8;\n#define NULL ((void*)0)\n\nclass Base {};\n\nstruct SceneNode {\n    SceneNode* parent;\n    SceneNode* first_child;\n    SceneNode* previous;\n    SceneNode* next;\n    Base* object;\n};\n\nclass SceneGraph {\n    SceneNode* m_root;\n    u8 unk[8];\n\n    bool AddChild(SceneNode* child, SceneNode* parent);\n    bool RemoveChild(SceneNode* child);\n};", "diff_flags": [], "diff_label": "SceneGraph::RemoveChild", "libraries": []}