{"compiler": "mwcc_41_60126", "compiler_flags": "-Cpp_exceptions off -stdinc -nodefaults -fp hard -lang=c++ -inline auto,level=2 -ipa file -rtti off -sdata 4 -sdata2 4 -enum int -O4,s", "source_code": "void SpkSpeakerCtrl::connect(s32 idx) {\n    BOOL state = OSDisableInterrupts();\n    SpeakerInfo& inf = getSpeakerInfo(idx);\n    \n    inf._0 = 1;\n    inf._1 = 0;\n    inf._24 = 0;\n    SpkSpeakerCtrl::initReconnect(idx);\n    inf._30 = -1;\n    SpkSpeakerCtrl::setSpeakerOn(idx);\n    OSRestoreInterrupts(state);\n}", "context": "typedef signed char         s8;\ntypedef signed short        s16;\ntypedef signed long         s32;\ntypedef signed long long    s64;\ntypedef unsigned char       u8;\ntypedef unsigned short      u16;\ntypedef unsigned long       u32;\ntypedef unsigned long long  u64;\ntypedef int                 BOOL;\n\ntypedef float f32;\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\ntypedef struct {\n    u8 data[32];\n} WENCInfo;\n    \nBOOL OSDisableInterrupts(void) __attribute__((noinline));\nBOOL OSEnableInterrupts(void) __attribute__((noinline));\nBOOL OSRestoreInterrupts(BOOL) __attribute__((noinline));\n\n#ifdef __cplusplus\n}\n#endif\n\nclass SpeakerInfo {\npublic:\n\n    inline void connect() {\n        _0 = 1;\n        _1 = 0;\n        _24 = 0;\n    }\n\n    inline void why() {\n        _30 = -1;\n    }\n\n    u8 _0;\n    u8 _1;\n    WENCInfo _2;\n    u8 _22;\n    u8 _23;\n    u32 _24;\n    u32 _28;\n    s32 _2C;\n    s32 _30;\n    u32 _34;\n    u32 _38;\n    u32 _3C;\n};\n\nclass SpkSpeakerCtrl {\npublic:\n    static void setup();\n    static void connect(s32);\n    static void disconnect(s32);\n    static void setSpeakerOn(s32);\n    static void setSpeakerOnCallback(s32, s32);\n    static void setSpeakerPlay(s32);\n    static void startPlayCallback(s32, s32);\n    static void setSpeakerOff(s32);\n    static void retryConnection(s32);\n    static void reconnect(s32);\n    static void framework();\n    static void reconnectProcess(s32);\n    static void initReconnect(s32);\n    static void continuousUsingProcess(s32);\n\n    static bool isEnable(s32);\n    static void extensionProcess(s32, s32);\n    static f32 getDeviceVolume(s32);\n\n    static SpeakerInfo sSpeakerInfo[4];\n\n    static inline SpeakerInfo& getSpeakerInfo(s32 idx) {\n        return sSpeakerInfo[idx];\n    }\n};", "diff_flags": [], "diff_label": "func_80393EC0", "libraries": []}