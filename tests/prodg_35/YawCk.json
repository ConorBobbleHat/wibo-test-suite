{"compiler": "prodg_35", "compiler_flags": "-O2 -g2 -mps-float", "source_code": "#define OSRoundUp32B(x) (((u32) (x) + 32 - 1) & ~(32 - 1))\n#define VIPadFrameBufferWidth(width) ((u16)(((u16)(width) + 15) & ~15))\n#define VI_DISPLAY_PIX_SZ 2\nint OSCreateHeap(void * start /* r29 */, void * end /* r27 */);                           /* extern */\nvoid* OSGetArenaHi();                                /* extern */\nvoid* OSGetArenaLo();                               /* extern */\nvoid* OSInitAlloc(void* arenaStart, void* arenaEnd, int maxHeaps);                     /* extern */\nvoid OSSetArenaLo(void * newLo /* r3 */);                                /* extern */\nint OSSetCurrentHeap(int heap);                              /* extern */\nvoid* DemoFrameBuffer1;\nvoid* DemoFrameBuffer2;\nvoid* DemoCurrentBuffer;\nstatic GXRenderModeObj* rmode;\nu32 totalprogramsize; \nu32 totalramavailable;\n\nstatic void __DEMOInitMem(void) {\n\tvoid *arenaLo, *arenaHi;\n\tu32 fbSize;\n\n\tarenaLo = OSGetArenaLo();\n\tarenaHi = OSGetArenaHi();\n\n\tfbSize = (VIPadFrameBufferWidth(rmode->fbWidth) * rmode->xfbHeight * (u32)VI_DISPLAY_PIX_SZ);\n\tDemoFrameBuffer1 = (void*)OSRoundUp32B((u32)arenaLo);\n    OSSetArenaLo((void *)(fbSize + (int)DemoFrameBuffer1));\n    arenaLo = OSGetArenaLo();\n    arenaHi = OSGetArenaHi();\n    totalramavailable = (int)arenaHi - (int)arenaLo;\n    totalprogramsize = 0x3000000 - totalramavailable;\n    arenaLo = OSRoundUp32B((u32)arenaLo);\n    arenaLo = (void *)OSInitAlloc(arenaLo,arenaHi,1);\n    OSSetArenaLo(arenaLo);\n    OSSetCurrentHeap(OSCreateHeap(OSRoundUp32B((u32)arenaLo),arenaHi)); // \n    OSSetArenaLo(arenaHi);\n}\n", "context": "#define NULL 0\ntypedef unsigned long size_t;\ntypedef unsigned long long u64;\ntypedef signed long long s64;\ntypedef unsigned long u32;\ntypedef signed long s32;\ntypedef signed short int16_t;\ntypedef signed int int32_t;\ntypedef signed long int64_t;\ntypedef signed long intmax_t;\ntypedef unsigned char uint8_t;\ntypedef unsigned short uint16_t;\ntypedef unsigned int uint32_t;\ntypedef unsigned int uint;\ntypedef unsigned short u16;\ntypedef signed short s16;\ntypedef unsigned char u8;\ntypedef signed char s8;\ntypedef float f32;\ntypedef double f64;\ntypedef int UNKWORD;\ntypedef void UNKTYPE;\ntypedef void(*error_func)(char[0x60], ...);\nenum { FALSE, TRUE };\ntypedef int BOOL;\n\n#define GX_ENABLE ((GXBool) 1)\n#define GX_DISABLE ((GXBool) 0)\n#define VI_TVMODE(format, interlace)  (((format) << 2) + (interlace))\n#define VI_INTERLACE     0\n#define VI_NON_INTERLACE 1\n#define VI_PROGRESSIVE   2\n\n#define VI_NTSC      0\n#define VI_PAL       1\n#define VI_MPAL      2\n#define VI_DEBUG     3\n#define VI_DEBUG_PAL 4\n#define VI_EURGB60   5\n\n//void GXSetVtxAttrFmt (enum _GXVtxFmt vtxfmt, enum _GXAttr attr, enum _GXCompCnt cnt, enum _GXCompType type, u8 frac);\n\ntypedef enum\n{\n    VI_TVMODE_NTSC_INT      = VI_TVMODE(VI_NTSC,        VI_INTERLACE),\n    VI_TVMODE_NTSC_DS       = VI_TVMODE(VI_NTSC,        VI_NON_INTERLACE),\n    VI_TVMODE_NTSC_PROG     = VI_TVMODE(VI_NTSC,        VI_PROGRESSIVE),\n    VI_TVMODE_PAL_INT       = VI_TVMODE(VI_PAL,         VI_INTERLACE),\n    VI_TVMODE_PAL_DS        = VI_TVMODE(VI_PAL,         VI_NON_INTERLACE),\n    VI_TVMODE_EURGB60_INT   = VI_TVMODE(VI_EURGB60,     VI_INTERLACE),\n    VI_TVMODE_EURGB60_DS    = VI_TVMODE(VI_EURGB60,     VI_NON_INTERLACE),\n    VI_TVMODE_MPAL_INT      = VI_TVMODE(VI_MPAL,        VI_INTERLACE),\n    VI_TVMODE_MPAL_DS       = VI_TVMODE(VI_MPAL,        VI_NON_INTERLACE),\n    VI_TVMODE_DEBUG_INT     = VI_TVMODE(VI_DEBUG,       VI_INTERLACE),\n    VI_TVMODE_DEBUG_PAL_INT = VI_TVMODE(VI_DEBUG_PAL,   VI_INTERLACE),\n    VI_TVMODE_DEBUG_PAL_DS  = VI_TVMODE(VI_DEBUG_PAL,   VI_NON_INTERLACE)\n} VITVMode;\n\ntypedef enum\n{\n    VI_XFBMODE_SF = 0,\n    VI_XFBMODE_DF\n} VIXFBMode;\n\ntypedef struct _GXRenderModeObj\n{\n    /*0x00*/ VITVMode viTVmode;\n    /*0x04*/ u16 fbWidth;\n    /*0x06*/ u16 efbHeight;\n    /*0x08*/ u16 xfbHeight;\n    /*0x0A*/ u16 viXOrigin;\n    /*0x0C*/ u16 viYOrigin;\n    /*0x0E*/ u16 viWidth;\n    /*0x10*/ u16 viHeight;\n    /*0x14*/ VIXFBMode xFBmode;\n    /*0x18*/ u8 field_rendering;\n    u8 aa;\n    u8 sample_pattern[12][2];\n    u8 vfilter[7];\n} GXRenderModeObj;\n\n\n// Size: 0x40, DWARF: 0x8E9296\nstruct _GSMATRIX\n{\n    float _11; // Offset: 0x0, DWARF: 0x8E92B4\n    float _12; // Offset: 0x4, DWARF: 0x8E92DA\n    float _13; // Offset: 0x8, DWARF: 0x8E9300\n    float _14; // Offset: 0xC, DWARF: 0x8E9326\n    float _21; // Offset: 0x10, DWARF: 0x8E934C\n    float _22; // Offset: 0x14, DWARF: 0x8E9372\n    float _23; // Offset: 0x18, DWARF: 0x8E9398\n    float _24; // Offset: 0x1C, DWARF: 0x8E93BE\n    float _31; // Offset: 0x20, DWARF: 0x8E93E4\n    float _32; // Offset: 0x24, DWARF: 0x8E940A\n    float _33; // Offset: 0x28, DWARF: 0x8E9430\n    float _34; // Offset: 0x2C, DWARF: 0x8E9456\n    float _41; // Offset: 0x30, DWARF: 0x8E947C\n    float _42; // Offset: 0x34, DWARF: 0x8E94A2\n    float _43; // Offset: 0x38, DWARF: 0x8E94C8\n    float _44; // Offset: 0x3C, DWARF: 0x8E94EE\n};\n\n#define offsetof(ST, M) ((size_t) & (((ST*)0)->M))", "diff_flags": [], "diff_label": "__DEMOInitMem", "libraries": []}