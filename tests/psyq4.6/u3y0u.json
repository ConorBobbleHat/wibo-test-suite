{"compiler": "psyq4.6", "compiler_flags": "-Os -mno-check-zero-division", "source_code": "void ScaleVector(Vec3u32* vector, int denominator, int numerator)\n{\n    int RT1;\n    int RT2;\n    int RT3;\n    int ratio;\n    \n    ratio = (numerator << 12);\n    ratio = ratio / denominator;\n    \n    gte_ldlvl(vector);\n    gte_ldMAC1(0);\n    gte_ldMAC2(0);\n    gte_ldMAC3(0);\n    \n    gte_ldIR0(ratio);\n    gte_gpl0();\n\n    read_mt(RT1,RT2,RT3);\n\n    vector->X = RT1 >> 12;\n    vector->Y = RT2 >> 12;\n    vector->Z = RT3 >> 12;\n}", "context": "typedef struct {\n    int X;\n    int Y;\n    int Z;\n} Vec3u32;\n\n#define gte_lddp(r0) __asm__ volatile(\"mtc2   %0, $8\" : : \"r\"(r0))\n#define gte_ldIR1(r0) __asm__ volatile(\"mtc2   %0, $9\" : : \"r\"(r0))\n#define gte_ldIR2(r0) __asm__ volatile(\"mtc2   %0, $10\" : : \"r\"(r0))\n#define gte_ldIR3(r0) __asm__ volatile(\"mtc2   %0, $11\" : : \"r\"(r0))\n#define gte_ldMAC1(r0) __asm__ volatile(\"mtc2   %0, $25\" : : \"r\"(r0))\n#define gte_ldMAC2(r0) __asm__ volatile(\"mtc2   %0, $26\" : : \"r\"(r0))\n#define gte_ldMAC3(r0) __asm__ volatile(\"mtc2   %0, $27\" : : \"r\"(r0))\n#define gte_ldLZCS(r0) __asm__ volatile(\"mtc2   %0, $30\" : : \"r\"(r0))\n\n#define\tgte_ldIR0( r0 )\tgte_lddp( r0 )\n\n#define read_mt(r0, r1, r2) __asm__ volatile( \\\n\t\"mfc2   %0, $25;\"  \\\n\t\"mfc2   %1, $26;\"  \\\n\t\"mfc2   %2, $27;\"  \\\n\t: \"=r\"(r0), \"=r\"(r1), \"=r\"(r2))\n\n#define gte_sqr0()    \\\n    __asm__ volatile( \\\n        \"nop;\"        \\\n        \"nop;\"        \\\n        \"cop2 0x0A00428;\")\n\n#define gte_stLZCR() ({ \\\n    unsigned int value; \\\n    __asm__ volatile(\"mfc2   %0, $31\" : \"=r\"(value)); \\\n    value; \\\n})\n\n#define gte_ldlvl(r0)          \\\n    __asm__ volatile(          \\\n        \"lwc2   $9, 0( %0 );\"  \\\n        \"lwc2   $10, 4( %0 );\" \\\n        \"lwc2   $11, 8( %0 )\"  \\\n        :                      \\\n        : \"r\"(r0))\n\n#define gte_gpl0()    \\\n    __asm__ volatile( \\\n        \"nop;\"        \\\n        \"nop;\"        \\\n        \"cop2 0x01A0003E\")\n", "diff_flags": [], "diff_label": "", "libraries": []}