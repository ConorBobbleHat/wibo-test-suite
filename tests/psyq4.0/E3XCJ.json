{"compiler": "psyq4.0", "compiler_flags": "-O2 -mel", "source_code": "void Convert32To16RGBA(uint *source,int size)\n{\n  // RGB masks\n  const int blueMask = 0x1F;\n  const int redMask = 0x7C00;\n  const int greenMask = 0x3E0;\n\n  uint blue;\n  uint green;\n  uint red;\n  uint remainder;\n  \n  byte *end = (byte *)((int)source + size);\n  byte *cursor = (byte *)source;\n  \n  while (cursor != end)\n  {\n    // Each color is 5 bits RGB555.\n    blue = *source & blueMask;\n    green = *source & greenMask;\n    red = *source & redMask;\n\n    // Originally, I thought this is alpha, but it seems too large.\n    remainder = *source >> 0x10;\n\n    // Convert the RGB portions to fit into 16 bits.\n    *cursor++ = (char)(blue * 4 + (green >> 4) + (green >> 5) + (red >> 10) >> 3);\n\n    // Perform the conversion for the second half.\n    blue = remainder & blueMask;\n    green = remainder & greenMask;\n    red = remainder & redMask;\n\n    *cursor++ = (char)(blue * 4 + (green >> 4) + (green >> 5) + (red >> 10) >> 3);\n\n    source++;\n  }\n}", "context": "typedef unsigned int uint;\ntypedef unsigned char byte;", "diff_flags": ["-DIFFlevenshtein"], "diff_label": "", "libraries": []}