{"compiler": "mwcc_30_131", "compiler_flags": "-sym on -lang=c++ -O4,p -char signed", "source_code": "/* No decompiler yet implemented for arm32 */\n\nu32 FastDivide(u32 a, u32 b);\n\n#pragma thumb on\nvoid Inventory::Save(SaveInventory *save) {\n    save->itemFlags = this->mItemFlags;\n    save->numRupees = this->mNumRupees;\n    for (s32 i = 0; i < NUM_POTIONS; ++i) {\n        save->potions[i] = this->mPotions[i];\n    }\n    save->numBombs = (u8) (*this->mAmmo)[ItemFlag_BombBag];\n    save->numBombchus = (u8) (*this->mAmmo)[ItemFlag_BombchuBag];\n    save->numArrows = (u8) (*this->mAmmo)[ItemFlag_Bow];\n    save->equippedItem = (u8) this->mEquippedItem;\n    save->salvagedTreasureFlags = this->mSalvagedTreasureFlags;\n    save->hourglassSeconds = FastDivide(this->mHourglassSandFrames, 60);\n    for (s32 i = 0; i < Gem_COUNT; ++i) {\n        save->numGems[i] = this->mNumGems[i];\n    }\n    u8 *saveEquippedParts = save->equippedShipParts;\n    const u32 *equippedParts = this->mEquippedShipParts;\n\n    s32 i = 0;\n    SaveInventory *save2 = save;\n    Inventory *this2 = this;\n    ShipParts (Inventory::*shipParts)[ShipPart_COUNT] = &Inventory::mShipParts;\n    for (; i < ShipPart_COUNT; ++i) {\n        save->equippedShipParts[i] = this->mEquippedShipParts[i];\n        for (s32 j = 0; j < ShipType_COUNT; ++j) {\n            u8 shipPartCount = ((Inventory*) ((u32)this2 + j)->*shipParts)[0].parts[0];\n            ((SaveInventory*) ((u32)save2 + j))->shipParts[0].parts[0] = shipPartCount;\n        }\n        this2 = (Inventory*) ((u32)this2 + sizeof(this2->mShipParts[0]));\n        save2 = (SaveInventory*) ((u32)save2 + sizeof(save2->shipParts[0]));\n    }\n\n    save->shipPartPricesShown = this->mShipPartPricesShown;\n    for (s32 i = 0; i < Treasure_COUNT; ++i) {\n        save->treasure[i] = this->mTreasure[i];\n    }\n    save->treasurePriceShownFlags[0] = this->mTreasurePriceShownFlags[0];\n    for (s32 i = 0; i < 6; ++i) {\n        save->unk_9f[i] = this->mUnk_098[i];\n        save->unk_82[i] = this->mUnk_09e[i];\n    }\n    save->quiverSize = this->mQuiverSize;\n    save->bombBagSize = this->mBombBagSize;\n    save->bombchuBagSize = this->mBombchuBagSize;\n    if (this->mEquippedFairy == FairyId_None) {\n        save->equippedFairy = 3;\n        return;\n    }\n    save->equippedFairy = (u8) this->mEquippedFairy;\n}\n", "context": "typedef unsigned int u32;\ntypedef unsigned short u16;\ntypedef unsigned char u8;\n\ntypedef int s32;\ntypedef short s16;\ntypedef char s8;\n\ntypedef u8 unk8;\ntypedef u16 unk16;\ntypedef u32 unk32;\n\n#define CEIL_DIV(a, b) (((a) + (b) - 1) / (b))\n\nclass Navi;\n\nclass SysObject {\npublic:\n    static void* operator new(unsigned long length, u32 *id, u32 idLength);\n    static void operator delete(void *ptr);\n};\n\nclass EquipItem {\nprivate:\n    /* 0 (vtable) */\n    /* 4 */ u16 mUnk_00;\n    /* 6 */ u16 mUnk_04;\n    /* 8 */ bool mInUse;\n\npublic:\n    EquipItem();\n\n    /* 00 */ virtual void vfunc_00(u32 param1, u32 param2, u32 param3); // func_ov00_020be8dc\n    /* 04 */ virtual EquipItem* vfunc_04(); // func_ov04_0210ba74\n    /* 08 */ virtual ~EquipItem();\n    /* 0c */ virtual u32 GetId() const = 0;\n    /* 10 */ virtual void vfunc_10(); // func_ov04_0210ba88\n\n    u16 GetAmmo();\n    /* 14 */ virtual bool IsUsable(u32 param1, u32 param2) const;\n    /* 18 */ virtual void vfunc_18() = 0;\n    /* 1c */ virtual void vfunc_1c(); // func_ov00_020be8e0\n    /* 20 */ virtual void GiveAmmo(u32 amount);\n\n    /* 24 */ virtual bool IsInUse() const;\n    /* 28 */ virtual bool UpdateInUse(u32 param1);\n    /* 2c */ virtual u32 vfunc_2c(); // func_ov00_020be964\n    /* 30 */ virtual void vfunc_30() = 0;\n    /* 34 */ virtual void vfunc_34(u16 *param1); // func_ov00_020be96c\n    /* 38 */ virtual void vfunc_38(u32 param1, u32 param2, u32 param3) = 0;\n    /* 3c */ virtual void vfunc_3c(void *param1) const; // func_ov00_020beb90\n    /* 40 */ virtual u32 vfunc_40() const; // func_ov00_020be970\n    /* 44 */ virtual u32 vfunc_44(u32 param1) const; // func_ov00_020be978\n    /* 48 */ virtual u32 vfunc_48(u32 param1) const; // func_ov00_020be980\n    /* 4c */ virtual u32 vfunc_4c() const; // func_ov00_020be988\n    /* 50 */\n};\n\ntypedef u32 FairyId;\nenum FairyId_ {\n    FairyId_None    = -1,\n    FairyId_Courage = 0,\n    FairyId_Power   = 1,\n    FairyId_Wisdom  = 2,\n};\n\nenum Gem {\n    Gem_Courage,\n    Gem_Power,\n    Gem_Wisdom,\n    Gem_COUNT,\n};\n\ntypedef u32 ShipPart;\nenum ShipPart_ {\n    ShipPart_Anchor,\n    ShipPart_Prow,\n    ShipPart_Hull,\n    ShipPart_Cannon,\n    ShipPart_Handrail,\n    ShipPart_Wheel,\n    ShipPart_Chimney,\n    ShipPart_Bridge,\n    ShipPart_COUNT,\n};\n\ntypedef u32 ShipType;\nenum ShipType_ {\n    ShipType_Linebeck,\n    ShipType_Bright,\n    ShipType_Iron,\n    ShipType_Stone,\n    ShipType_Vintage,\n    ShipType_Demon,\n    ShipType_Tropical,\n    ShipType_Dignified,\n    ShipType_Golden,\n    ShipType_COUNT,\n};\n\ntypedef u32 ShipItem;\n#define SHIP_ITEM(part, ship) (ShipPart_ ## part * ShipPart_COUNT + ShipType_ ## type)\n#define ShipItem_COUNT (ShipPart_COUNT * ShipType_COUNT)\n\ntypedef u32 Treasure;\nenum Treasure_ {\n    Treasure_PinkCoral,\n    Treasure_WhitePearlLoop,\n    Treasure_DarkPearlLoop,\n    Treasure_ZoraScale,\n    Treasure_GoronAmber,\n    Treasure_RutoCrown,\n    Treasure_HelmarocPlume,\n    Treasure_RegalRing,\n\n    Treasure_COUNT,\n};\n\n#define NUM_POTIONS 2\ntypedef u8 Potion;\nenum Potion_ {\n    Potion_None,\n    Potion_Red,\n    Potion_Blue,\n    Potion_Yellow,\n    Potion_COUNT,\n};\n\ntypedef u32 ItemFlag;\nenum ItemFlag_ {\n    ItemFlag_OshusSword       = 0,\n    ItemFlag_WoodenShield     = 1,\n    ItemFlag_Boomerang        = 2,\n    ItemFlag_Shovel           = 3,\n    ItemFlag_BombBag          = 4,\n    ItemFlag_Bow              = 5,\n    ItemFlag_GrapplingHook    = 6,\n    ItemFlag_BombchuBag       = 7,\n    ItemFlag_Hammer           = 8,\n    ItemFlag_PotionA          = 9,\n    ItemFlag_PotionB          = 10,\n    ItemFlag_EQUIP_START      = ItemFlag_OshusSword,\n    ItemFlag_EQUIP_END        = ItemFlag_PotionB + 1,\n    ItemFlag_EQUIP_COUNT      = ItemFlag_EQUIP_END - ItemFlag_EQUIP_START,\n\n    ItemFlag_SpiritOfCourage  = 20,\n    ItemFlag_SpiritOfPower    = 21,\n    ItemFlag_SpiritOfWisdom   = 22,\n    ItemFlag_CourageLv1       = 23,\n    ItemFlag_PowerLv1         = 24,\n    ItemFlag_WisdomLv1        = 25,\n    ItemFlag_CourageLv2       = 26,\n    ItemFlag_PowerLv2         = 27,\n    ItemFlag_WisdomLv2        = 28,\n\n    ItemFlag_Hourglass        = 32,\n    ItemFlag_SeaChartSW       = 33,\n    ItemFlag_SeaChartNW       = 34,\n    ItemFlag_SeaChartSE       = 35,\n    ItemFlag_SeaChartNE       = 36,\n    ItemFlag_PhantomSword     = 37,\n    ItemFlag_SunKey           = 38,\n\n    ItemFlag_KingsKey         = 42,\n    ItemFlag_GhostKey         = 43,\n\n    ItemFlag_SwordsmansScroll = 45,\n\n    ItemFlag_COUNT            = 128,\n};\n\nstruct ItemFlags {\n    /* 00 */ u32 flags[CEIL_DIV(ItemFlag_COUNT, 32)];\n    /* 10 */\n};\n\nstruct ShipPartPricesShown {\n    /* 0 */ u32 flags[CEIL_DIV(ShipItem_COUNT, 32)];\n    /* c */\n};\n\nstruct ShipParts {\n    /* 0 */ u8 parts[ShipType_COUNT];\n    /* 9 */\n\n    inline void operator=(const ShipParts &other);\n};\n\nstruct SaveInventory {\n    /* 00 */ ItemFlags itemFlags;\n    /* 10 */ u32 salvagedTreasureFlags;\n    /* 14 */ ShipPartPricesShown shipPartPricesShown;\n    /* 20 */ u32 treasurePriceShownFlags[CEIL_DIV(Treasure_COUNT, 32)];\n    /* 24 */ u8 equippedShipParts[ShipPart_COUNT];\n    /* 2c */ ShipParts shipParts[ShipPart_COUNT];\n    ///* 2c */ u8 shipParts[ShipItem_COUNT];\n    /* 74 */ s8 treasure[Treasure_COUNT];\n    /* 7c */ unk8 unk_7c[4];\n    /* 80 */ u16 hourglassSeconds;\n    /* 82 */ unk16 unk_82[6];\n    /* 8e */ u16 numRupees;\n    /* 90 */ unk8 unk_90;\n    /* 91 */ unk8 unk_91;\n    /* 92 */ unk8 unk_92;\n    /* 93 */ u8 numBombs;\n    /* 94 */ u8 numBombchus;\n    /* 95 */ u8 numArrows;\n    /* 96 */ u8 equippedItem;\n    /* 97 */ Potion potions[NUM_POTIONS];\n    /* 99 */ u8 numGems[Gem_COUNT];\n    /* 9c */ u8 quiverSize;\n    /* 9d */ u8 bombBagSize;\n    /* 9e */ u8 bombchuBagSize;\n    /* 9f */ unk8 unk_9f[6];\n    /* a5 */ u8 equippedFairy;\n    /* a6 */\n};\n\nclass Inventory : public SysObject {\nprivate:\n    /* 000 */ ItemFlag mEquippedItem;\n    /* 004 */ ItemFlag mPrevEquippedItem;\n    /* 008 */ ItemFlag mForcedItem; // game crashes when any item besides this one is equipped\n    /* 00c */ u32 mHourglassSandFrames;\n    /* 010 */ FairyId mEquippedFairy;\n    /* 014 */ Navi *mNaviCourage;\n    /* 018 */ Navi *mNaviPower;\n    /* 01c */ Navi *mNaviWisdom;\n    /* 020 */ u16 mEquipLoadTimer;\n    /* 022 */ u16 mNumRupees;\n    /* 024 */ u8 mNumGems[Gem_COUNT];\n    /* 027 */ unk8 mUnk_027; // padding?\n    /* 028 */ ShipType mEquippedShipParts[ShipPart_COUNT];\n    /* 048 */ ShipParts mShipParts[ShipPart_COUNT];\n    ///* 048 */ u8 mShipParts[ShipItem_COUNT];\n    /* 090 */ s8 mTreasure[Treasure_COUNT];\n    /* 098 */ u8 mUnk_098[6];\n    /* 09e */ u16 mUnk_09e[6]; // corresponds with mUnk_098\n    /* 0a6 */ unk16 mUnk_0a6; // padding?\n    /* 0ac */ EquipItem *(*mEquipItems)[ItemFlag_EQUIP_COUNT];\n    /* 0b0 */ u16 (*mAmmo)[ItemFlag_EQUIP_COUNT];\n    /* 0b4 */ u16 mQuiverSize;\n    /* 0b6 */ u16 mBombBagSize;\n    /* 0b8 */ u16 mBombchuBagSize;\n    /* 0ba */ unk16 mUnk_0ba; // only between 0 and 9\n    /* 0bc */ Potion mPotions[2];\n    /* 0be */ unk8 mUnk_0be[2]; // padding?\n    /* 0c0 */ void *mIslandData[16];\n    /* 100 */ void *mDungeonData[5]; // non-null in dungeons/caves, similar struct to mIslandData\n    /* 114 */ void *mUnk_114;\n    /* 118 */ unk32 mUnk_118;\n    /* 11c */ unk32 mUnk_11c;\n    /* 120 */ void *mUnk_120;\n    /* 124 */ void *mUnk_124;\n    /* 128 */ ItemFlags mItemFlags;\n    /* 138 */ u32 mSalvagedTreasureFlags;\n    /* 13c */ ShipPartPricesShown mShipPartPricesShown;\n    /* 148 */ u32 mTreasurePriceShownFlags[CEIL_DIV(Treasure_COUNT, 32)];\n    /* 14c */ unk8 mUnk_14c[0x4];\n    /* 150 */\n\npublic:\n    static Inventory* Create();\n    static void Destroy();\n    Inventory();\n    ~Inventory();\n\n    void ClearPrevEquippedItem();\n    void Save(SaveInventory *save);\n};\n\nextern Inventory *gInventory;", "diff_flags": [], "diff_label": "func_ov00_020ad0e4", "libraries": []}