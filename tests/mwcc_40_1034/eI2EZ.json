{"compiler": "mwcc_40_1034", "compiler_flags": "-O4,p -enum int -proc arm946e -gccext,on -fp soft -lang c99 -char signed -inline on,noauto -Cpp_exceptions off -gccinc -interworking -gccdep -MD -g", "source_code": "int FUN_0219ec84(BTL_SEVER *btlSever, int *seq)\n{\n    u32 result = FUN_0219de84(btlSever->m_mainModule);\n    btlSever->m_btlResultContext.resultCode = result;\n    btlSever->m_btlResultContext.clientID = FUN_0219c860(btlSever->m_mainModule);\n    u32 competitor = FUN_0219bed4(btlSever->m_mainModule);\n\n    switch (competitor)\n    {\n    case 1:\n        FUN_0219e5f0(btlSever, 0x0219EE40);\n        break;\n    case 2:\n        FUN_0219e5f0(btlSever, 0x0219EE88);\n        break;\n    case 3:\n        FUN_0219e5f0(btlSever, 0x0219EDFC);\n        break;\n    case 0:\n        if( result == 1 )\n        {\n            FUN_0219e5f0(btlSever, 0x0219ED6C);\n        }\n        else if ((result == 0) || (result == 2))\n        {\n            FUN_0219e5f0(btlSever, 0x0219EDB4);\n        }\n        else\n            FUN_0219e5f0(btlSever, 0x0219ED24);\n        break;\n    default:\n        if (result == 1)\n        {\n            func_0x02005df4(FUN_0219bf00(btlSever->m_mainModule), 0xFFFF);\n            \n        }\n        FUN_0219e5f0(btlSever, 0x0219ED24);\n        break;\n    }\n\n    return 0;\n}\n", "context": "typedef unsigned char uint8_t;\ntypedef unsigned short uint16_t;\ntypedef unsigned int uint32_t;\ntypedef int int32_t;\ntypedef unsigned long long uint64_t;\ntypedef signed long long int    s64;\n\ntypedef uint8_t   u8;\ntypedef uint16_t u16;\ntypedef uint32_t u32;\ntypedef int32_t  s32;\n\ntypedef s32 fx32;\n\n#pragma thumb on\n\n#define BTL_CLIENT_NUM 4\n#define BTL_CLIENT_MAX 4\n#define BTL_POS_MAX 6\n#define PARTY_SIZE 6\n#define FALSE 0\n#define NULL ((void *)0)\n\nstruct TINYMT32_T\n{\n    u32 status[4];\n    u32 mat1;\n    u32 mat2;\n};\n\ntypedef struct TINYMT32_T tinymt32_t;\n\ntypedef struct\n{\n    u16 TurnNum;       // \u304b\u304b\u3063\u305f\u30bf\u30fc\u30f3\u6570\n    u8 HPSum;\n    u8 PokeChgNum;    // \u4ea4\u4ee3\u56de\u6570\n    u8 VoidAtcNum;    // \u52b9\u679c\u304c\u306a\u3044\u6280\u3092\u51fa\u3057\u305f\u56de\u6570\n    u8 WeakAtcNum;    // \u3070\u3064\u3050\u3093\u306e\u6280\u3092\u51fa\u3057\u305f\u56de\u6570\n    u8 ResistAtcNum;  // \u3044\u307e\u3072\u3068\u3064\u306e\u6280\u3092\u51fa\u3057\u305f\u56de\u6570\n    u8 VoidNum;       // \u52b9\u679c\u304c\u306a\u3044\u6280\u3092\u53d7\u3051\u305f\u56de\u6570\n    u8 ResistNum;     // \u3044\u307e\u3072\u3068\u3064\u306e\u6280\u3092\u53d7\u3051\u305f\u56de\u6570\n    u8 WinTrainerNum; // \u5012\u3057\u305f\u30c8\u30ec\u30fc\u30ca\u30fc\u6570\n    u8 WinPokeNum;    // \u5012\u3057\u305f\u30dd\u30b1\u30e2\u30f3\u6570\n    u8 LosePokeNum;   // \u5012\u3055\u308c\u305f\u30dd\u30b1\u30e2\u30f3\u6570\n    u8 UseWazaNum;    // \u4f7f\u7528\u3057\u305f\u6280\u306e\u6570\n} BATTLE_KENTEI_RESULT;\n\ntypedef struct\n{\n    /*0x0*/ u32 competitor;\n    /*0x4*/ int rule;\n    /*0x8*/ int unk8;\n    /*0xC*/ int unkC;\n    /*0x10*/ u8 unk10[0xA];\n    /*0x1A*/ u16 unk1A;\n    /*0x1C*/ void *netHandle;\n    /*0x20*/ u8 commMode;\n    /*0x21*/ u8 commPos;\n    /*0x22*/ u8 multiMode;\n    /*0x23*/ u8 recordDataMode;\n    /*0x24*/ void* party[ BTL_CLIENT_NUM ];\n    /*0x34*/ void *playerStatus[BTL_CLIENT_NUM];\n    /*0x44*/ u8 unk44[4];\n    /*0x48*/ void *unk48[4];\n    /*0x58*/ u8 unk4C[0x18];\n    /*0x70*/ void *unk70;\n    /*0x74*/ void *configData;\n    /*0x78*/ void *itemData;\n    /*0x7C*/ void *bagCursor;\n    /*0x80*/ void *unk80;\n    /*0x84*/ void *unk84;\n    /*0x88*/ int unk88;\n    /*0x8C*/ u16 LimitTimeGame;\n    /*0x8E*/ u16 LimitTimeCommand;\n    /*0x90*/ u8 unk90[0x7];\n    /*0x97*/ u8 unk97;\n    /*0x98*/ u8 badgeCount;\n    /*0x99*/ u8 unk99[0x7];\n    /*0xA0*/ u16 unka0;\n    /*0xA2*/ u16 unka2;\n    /*0xA4*/ int getMoney;\n    /*0xA8*/ u8 unka8[4];\n    /*0xAC*/ u8 capturedPokeIdx;\n    /*0xAD*/ u8 commServerVer;\n    /*0xAE*/ u16 unk_ae;\n    /*0xB0*/ u8* recBuffer;\n    /*0xB4*/ int unk_b4;\n    /*0xB8*/ tinymt32_t recRandContext;\n    /*0xD0*/ BATTLE_KENTEI_RESULT kenteiResult;\n    /*0xDD*/ u8 cmdIllegalFlag : 1;\n             u8 recPlayCompleteFlag : 1;\n            u8 unkdd22: 1;\n    /*0xDD*/ u8 unkdd3 : 2;\n    /*0xDD*/ u8 unkdd4 : 3;\n    /*0xDE*/ u8 unkde:1;\n    /*0xDF*/ u8 unkdf;\n    /*0xE0*/ u8 unkE0;\n    /*0xE1*/ u8 fightPokeIndex[6];\n    /*0xE7*/ u8 unkE4[0x4D];\n    /*0x134*/ int unk134;\n    /*0x138*/ u16 unk138;\n    /*0x13A*/ u16 unk13A;\n} BATTLE_SETUP_PARAM;\n\ntypedef struct\n{\n    void* m_pMember[6];\n    u8 m_memberCount;\n    u8 m_numCoverPos;\n    u16 fill;\n}BTL_PARTY;\n\ntypedef struct\n{\n    void* m_member[6];\n    u8 m_memberCount;\n    u8 markingIndex;\n}PokeParty;\n\ntypedef struct\n{\n    /*0x0*/ void *mainModule;\n    /*0x4*/ BTL_PARTY m_party[BTL_CLIENT_MAX];\n    /*0x74*/ PokeParty* m_srcParty[ BTL_CLIENT_MAX ];\n    /*0x84*/ void* m_pokeParam[0x18];\n    /*0xE4*/ int m_fForServer;\n} POKECON;\n// sizeof 0xE8\n\ntypedef struct\n{\n    u8 s[0x10];\n} Reader;\n\ntypedef struct\n{\n    /*0x0*/ void *unk0; //\u67d0\u6587\u672c?\n    /*0x4*/ void *name;\n    /*0x8*/ u16 unk8;\n    /*0xA*/ u16 unkA;\n    /*0xC*/ void *win_msg;\n    /*0x10*/ u16 useItem[4];\n\n    /*0x18*/ u8 unk18;\n    /*0x19*/ u8 trainerSex;\n    /*0x1A*/ u8 trainerGold;\n    /*0x1B*/ u8 pad1;\n    /*0x1C*/ u32 ai_bit;\n    /*0x20*/ int unk20;\n\n    /*0x24*/ u8 grammer_attr;\n    /*0x25*/ u8 grammer_isPlural;\n    /*0x26*/ u8 grammer_attr1;\n    /*0x27*/ u8 grammer_isPlural1;\n\n} TRAINER_DATA;\n// size of 0x28\n\ntypedef struct\n{\n    u8 (*unk_0)(u32, int*);\n    u8 (*unk_4)(u32, int*);\n    int unk8;\n    int unkC;\n}unk_struct_450;\n\ntypedef struct\n{\n    tinymt32_t randomContext;\n    u16 debugFlagBit;\n    u16 LimitTimeGame;\n    u16 LimitTimeCommand;\n    u8 msgSpeed;\n    u8 fWazaEffectEnable : 4;\n    u8 fCommTag : 4;\n\n} SERVER_NOTIFY_PARAM;\n\ntypedef struct\n{\n    u32 count;\n    u8 clientID[BTL_CLIENT_MAX];\n} EscapeInfo;\ntypedef signed char    s8;\ntypedef struct\n{\n    int unk0;\nint unk4;\ns8 unk8;\n}struct_unk478;\n\ntypedef struct\n{\n    /*0x0*/ BATTLE_SETUP_PARAM *bp;\n    /*0x4*/ void *m_viewCore;\n    /*0x8*/ int m_server;\n    /*0xC*/ int m_cmdCheckServer;\n    /*0x10*/ void *m_client[4];\n    /*0x20*/ TRAINER_DATA tr_data[4];\n    /*0xC0*/ void *m_playerStatus;\n    /*0xC4*/ u8 m_fClientQuit[BTL_CLIENT_NUM];\n    /*0xC8*/ POKECON m_pokeconForClient;\n    /*0x1B0*/ POKECON m_pokeconForServer;\n    /*0x298*/ void *m_srcParty[4];\n    /*0x2A8*/ void *m_srcPartyForServer[4];\n    /*0x2B8*/ void *m_tmpParty;\n    /*0x2BC*/ void *unk_2bc;\n    /*0x2C0*/ void *m_ppIllusionZoroArc;\n    /*0x2C4*/ void *m_AIDataContainer;\n    /*0x2C8*/ Reader m_recReader; // \u672a\u77e5\u5927\u5c0f\n    /*0x2D8*/ u8 unk2[0x108];\n    /*0x3E0*/ int unk3E0[4];\n    /*0x3F0*/ tinymt32_t m_randomContext;\n    /*0x408*/ SERVER_NOTIFY_PARAM unk408;\n    /*0x428*/ u8 m_posCoverClientID[ BTL_POS_MAX ];                        //\n    /*0x42E*/ u16 unk42E;\n    /*0x430*/ u32 m_regularMoney;\n    /*0x434*/ u32 m_bonusMoney;\n    /*0x438*/ u32 m_loseMoney;\n    /*0x43C*/ int m_msgSpeed;\n    /*0x440*/ u16 m_LimitTimeGame;\n    /*0x442*/ u16 m_LimitTimeCommand;\n    /*0x444*/ int m_serverResult;\n    /*0x448*/ EscapeInfo m_escapeInfo;\n    /*0x450*/ unk_struct_450 unk_450;\n    /*0x460*/ int m_subSeq;\n    /*0x464*/ u8 (*m_mainLoop)(BTL_MAIN_MODULE);\n    /*0x468*/ u16 heapId;\n    /*0x46A*/ u8 unk46A;\n    /*0x46B*/ u8 m_numClients;\n    /*0x46C*/ u8 m_myClientID;\n    /*0x46D*/ u8 m_myOrgPos;\n    /*0x46E*/ u8 m_ImServer;\n    /*0x46F*/ u8 unk46f;\n    /*0x470*/ u8 m_MultiAIDataSeq;\n    /*0x471*/ u8 m_MultiAIClientNum;\n    /*0x472*/ u8 m_MultiAIClientID;\n    /*0x473*/ u8 m_fCommError : 1;\n    u8 m_fCommErrorMainQuit : 1;\n    u8 m_fWazaEffectEnable : 1;\n    u8 m_fGetMoneyFixed : 1;\n    u8 unk473Flag : 1;\n    u8 m_fBGMFadeOutDisable : 1;\n    u8 m_fLoseMoneyFixed : 1;\n    u8 m_fSoundPushed : 1;\n    /*0x474*/ int unk474;\n    /*0x478*/ struct_unk478 *unk478;\n    /*0x47C*/ int unk47C;\n    /*0x480*/ int unk480;\n    /*0x484*/ u8 unk484;\n} BTL_MAIN_MODULE;\n\ntypedef struct\n{\n    void *ppSrc;\n    void *ppFake;\n\n    u32 exp;\n    u16 monsno;\n} BTL_POKEPARAM;\n\ntypedef struct\n{\n    /*0x0*/ u32 weather;\n    /*0x4*/ u32 envID;\n    /*0x8*/ u8 hour;\n    /*0x9*/ u8 minute;\n    /*0xA*/ u16 place_id;\n    /*.................*/\n} BTL_FIELD_SITUATION;\n\ntypedef enum\n{\n    BTL_EXPOS_DEFAULT = 0, ///< \u81ea\u5206\u3060\u3051\n\n    BTL_EXPOS_AREA_ENEMY,   ///< \uff08\u653b\u6483\u7bc4\u56f2\u5185\u306e\uff09\u76f8\u624b\u5168\u90e8\n    BTL_EXPOS_AREA_OTHERS,  ///< \uff08\u653b\u6483\u7bc4\u56f2\u5185\u306e\uff09\u81ea\u5206\u4ee5\u5916\u5168\u90e8\n    BTL_EXPOS_AREA_MYTEAM,  ///< \uff08\u653b\u6483\u7bc4\u56f2\u5185\u306e\uff09\u5473\u65b9\u5168\u90e8\n    BTL_EXPOS_AREA_FRIENDS, ///< \uff08\u653b\u6483\u7bc4\u56f2\u5185\u306e\uff09\u81ea\u5206\u4ee5\u5916\u306e\u5473\u65b9\u5168\u90e8\n    BTL_EXPOS_AREA_ALL,     ///< \uff08\u653b\u6483\u7bc4\u56f2\u5185\u306e\uff09\u6575\u30fb\u5473\u65b9\u5168\u90e8\n\n    BTL_EXPOS_FULL_ENEMY,   ///< \uff08\u5168\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\uff09\u76f8\u624b\u30dd\u30b1\u5168\u90e8\n    BTL_EXPOS_FULL_FRIENDS, ///< \uff08\u5168\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\uff09\u81ea\u5206\u4ee5\u5916\u306e\u5473\u65b9\u30dd\u30b1\u5168\u90e8\n    BTL_EXPOS_FULL_ALL,     ///< \uff08\u5168\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\uff09\u30dd\u30b1\u5168\u90e8\n\n    BTL_EXPOS_NEXT_FRIENDS, ///< \uff08\u81ea\u5206\u306e\u96a3\u306e\uff09\u5473\u65b9\u5168\u90e8\n\n    //  BTL_EXPOS_AREA_ENEMY\n\n} BtlExPosType;\n\ntypedef enum\n{\n    BTL_SIDE_1ST,\n    BTL_SIDE_2ND,\n\n    BTL_SIDE_MAX,\n\n} BtlSide_tag;\n\ntypedef u8 BtlPokePos;\n\ntypedef struct\n{\n    u16 numEnemys;\n    u16 numFriends;\n    BtlPokePos enemyPos[3];\n    BtlPokePos friendPos[3];\n} BTL_VALIABLE_ATTACK_AREA;\n\nenum\n{\n\n    BTL_RULE_SINGLE,\n    BTL_RULE_DOUBLE,\n    BTL_RULE_TRIPLE,\n    BTL_RULE_ROTATION,\n    BTL_RULE_BAND,\n    BTL_ROTATION_FRONTPOS_NUM = 1,\n    BTL_ROTATION_BACKPOS_NUM = 2,\n\n    BTL_ROTATION_VISIBLE_POS_NUM = BTL_ROTATION_FRONTPOS_NUM + BTL_ROTATION_BACKPOS_NUM,\n};\n\n#define BTL_SERVERCMD_QUE_SIZE 3000\n\ntypedef struct\n{\n    u32 writePtr;\n    u32 readPtr;\n    u8 buffer[BTL_SERVERCMD_QUE_SIZE];\n}SCQUE;\n\ntypedef struct\n{\n    void *adapter;\n    BTL_PARTY *party;\n    u8 memberCount;\n    u8 numCoverPos;\n    u8 isLocalClient;\n    u8 myID;\n} SVCL_WORK;\n// sizeof 0xC\n\ntypedef int (*ServerMainProc)(int, int*);\n\n\n\ntypedef struct\n{\n    u16 param[BTL_CLIENT_MAX][6];\n    u8 count[BTL_CLIENT_MAX];\n} SVCL_ACTION;\n\ntypedef struct\n{\n    u16 clientID;\n    u16 resultCode;\n} BTL_RESULT_CONTEXT;\n\ntypedef struct\n{\n    /*0x0*/ ServerMainProc m_mainProc;\n    /*0x4*/ int m_seq;\n    /*0x8*/ int unk8;\n    /*0xC*/ BTL_MAIN_MODULE *m_mainModule;\n    /*0x10*/ POKECON *m_pokeCon;\n    /*0x14*/ SVCL_WORK m_client[BTL_CLIENT_MAX];\n    /*0x44*/ void *m_flowWork;\n    /*0x48*/ int m_flowResult;\n    /*0x4C*/ int unk4C;\n    /*0x50*/ tinymt32_t m_randContext;\n    /*0x68*/ u8 unk68[0x40];\n    /*0xA8*/ BTL_RESULT_CONTEXT m_btlResultContext;\n    /*0xAC*/ int unkAC;\n    /*0xB0*/ EscapeInfo *m_escapeInfo;\n    /*0xB4*/ SVCL_ACTION m_clientAction;\n    /*0xE8*/ u32 unkE8;\n    /*0xEC*/ u8 m_enemyPutPokeID;\n    /*0xED*/ u8 m_quitStep;\n    /*0xEE*/ u16 unkEE;\n    /*0xF0*/ SCQUE m_queBody;\n    /*0xCB0*/ SCQUE *m_que;\n    /*0xCB4*/ u8 unkCB4[BTL_CLIENT_MAX];\n    /*0xCB8*/ u16 unkCB8;\n    /*0xCBA*/ u8 m_changePokeCnt;\n    /*0xCBB*/ u8 unkCBB;\n    /*0xCBC*/ u16 unkCBC;\n    /*0xCBE*/ u8 unkCBE;\n    /*0xCBF*/ u8 unkCBF;\n    /*0xCC0*/ u16 heapId;\n}BTL_SEVER;\n//sizeof 0xCC4", "diff_flags": [], "diff_label": "ovy167_219ec84", "libraries": []}